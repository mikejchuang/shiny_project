runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
top_addresses <- raw_slice %>% group_by(., latitude, longitude,complaint_type, incident_address) %>% summarize(., count=n()) %>%
group_by(., incident_address) %>% mutate(., total=sum(count)) %>% arrange(.,desc(total))
View(top_addresses)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(tidyr)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
x <- c(5, 1, 3, 2, 2, NA)
row_number(x)
min_rank(x)
dense_rank(x)
percent_rank(x)
cume_dist(x)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
row(x)
runApp()
runApp()
runApp()
runApp()
dense_rank(x)
dense_rank(desc(x))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
class(raw_slice)
raw_data_full <- fread("./Service_Requests_311.csv", stringsAsFactors = F, nrows=5000)
raw_data_full <- fread("./Service_Requests_311.csv", stringsAsFactors = F, nrows=5000)
raw_slice = fread('./311_Service_Requests_from_2015.csv',select = c("Unique Key","Incident Zip","Incident Address", "Created Date", "Complaint Type",'Descriptor','Borough', 'Latitude','Longitude'))
names(raw_slice) <-  tolower(names(raw_slice))
names(raw_slice) <- gsub(" ", '_', names(raw_slice))
class(raw_slice)
col_groups <- c('heating', 'noise','construction','plumbing', 'paint', 'unsanitary', 'car_related','street_lights_signals','tree','electric','vermin','street_sidewalk')
raw_slice <- raw_slice %>%
filter(., !is.na(longitude), longitude > -77, !incident_address=="") %>%
#filter(., !incident_address=="") %>%
mutate(.,complaint_type=gsub('(.*heat.*)', replacement=col_groups[1], x=complaint_type, ignore.case=TRUE)) %>%
mutate(.,complaint_type=gsub('(.*noise.*)', replacement=col_groups[2], x=complaint_type, ignore.case=TRUE))  %>%
mutate(.,complaint_type=gsub('(.*construction.*)', replacement=col_groups[3], x=complaint_type, ignore.case=TRUE)) %>%
mutate(.,complaint_type=gsub('(.*plumbing*|.*water sys.*|.*leak.*)', replacement=col_groups[4], x=complaint_type, ignore.case=TRUE))%>%
mutate(.,complaint_type=gsub('(.*paint.*)', replacement=col_groups[5], x=complaint_type, ignore.case=TRUE)) %>%
mutate(.,complaint_type=gsub('(.*sani.*|.*dirty.*)', replacement=col_groups[6], x=complaint_type, ignore.case=TRUE)) %>%
mutate(.,complaint_type=gsub('blocked driveway|Illegal Parking|Traffic$', replacement=col_groups[7], x=complaint_type, ignore.case=TRUE)) %>%
#mutate(.,complaint_type=gsub('.*(Street Sign).*|.*(Street Light).*|.*signal.*', replacement=col_groups[8], x=complaint_type, ignore.case=TRUE)) %>%
mutate(.,complaint_type=gsub('((.*\\btree.*)|(branch))', replacement=col_groups[9], x=complaint_type, ignore.case=TRUE))%>%
#mutate(.,complaint_type=gsub('(.*electric.*)', replacement=col_groups[10], x=complaint_type, ignore.case=TRUE))%>%
mutate(.,complaint_type=gsub('(.*rodent.*)|(.*nonconst.*)', replacement=col_groups[11], x=complaint_type, ignore.case=TRUE)) %>%
mutate(.,complaint_type=gsub('(.*sidewalk.*)|(.*street\\b).*', replacement=col_groups[12], x=complaint_type, ignore.case=TRUE)) %>%
filter(., complaint_type %in% col_groups) %>%
mutate(.,weekday = weekdays(as.Date(created_date,format = "%m/%d/%Y")),
year = year(as.Date(created_date,format = "%m/%d/%Y")),
hour = hour(parse_date_time(created_date, 'mdY H!MS p' )),
month = month(as.Date(created_date,format = "%m/%d/%Y")),
weeknum = week(as.Date(created_date,format = "%m/%d/%Y")),
yday = yday(as.Date(created_date,format = "%m/%d/%Y")))
raw_slice[raw_slice==""] <- NA
raw_slice <- na.omit(raw_slice)
raw_slice$weekday <- factor(raw_slice$weekday,levels=c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'))
runApp()
View(raw_slice)
write.csv(raw_slice, file='shiny_data')
write.csv(raw_slice, file='shiny_data')
write.csv(raw_slice, file='shiny_data.csv')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
reen", "blue"), 1:10)
pal
pal <- colorNumeric(c("red", "green", "blue"), 1:10)
pal
print(pal)
print(pal)
print(pal)
pal <- colorNumeric(c("red", "green", "blue"), 1:50)
pal
print(pal)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
previewColors(colorNumeric("Blues", domain = NULL), sort(rexp(16)))
previewColors(colorNumeric("Blues", 1:50), sort(rexp(16)))
previewColors(pal)
previewColors(pal, sort(c(1:50))
print(pal)
previewColors(colorNumeric("Blues", 1:50), sort(rexp(16)))
previewColors(pal, sort(c(1:50))
print(pal)
previewColors(colorNumeric("Blues", 1:50), sort(rexp(16)))
pal <- colorNumeric(c("red", "green", "blue"), 1:50)
previewColors(pal, sort(c(1:50))
print(pal)
previewColors(colorNumeric("Blues", 1:50), sort(rexp(16)))
previewColors(pal, sort(c(1:50)))
runApp()
pal <- colorBin(c("red", "green", "blue"), 1:50)
previewColors(pal, sort(c(1:50)))
pal <- colorNumeric(c("red", "green", "blue"), 1:50)
previewColors(pal, sort(c(1:50)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
pal <- colorNumeric(c("red", "blue"), 1:50)
previewColors(pal, sort(c(1:50)))
pal <- colorNumeric(c("red", 'green',"blue"), 1:50)
previewColors(pal, sort(c(1:50)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::setAccountInfo(name='mikejchuang', token='22343851DBDFABC23E0665687C939BD4', secret='TrVzPHl9bo8QvFdMz3+DR7qe2/JpGNynJAHvVKXV')
runApp()
print(test.data.table(
))
print(test)
rsconnect::deployApp('/Users/michaelchuang/git_project/mjc_Shiny_Project')
rsconnect::setAccountInfo(name='mikejchuang', token='22343851DBDFABC23E0665687C939BD4', secret='TrVzPHl9bo8QvFdMz3+DR7qe2/JpGNynJAHvVKXV')
rsconnect::deployApp('/Users/michaelchuang/git_project/mjc_Shiny_Project')
library(rsconnect)
rsconnect::setAccountInfo(name='mikejchuang12', token='39000D5158B58452D8E2B0A94E65DF5D', secret='FYtk/3tycKsW5JC2ZYdgd0F974zuOK6HUFU79WBx')
rsconnect::deployApp('/Users/michaelchuang/git_project/mjc_Shiny_Project')
rsconnect::deployApp()
rsconnect::setAccountInfo(name='mikejchuang12', token='39000D5158B58452D8E2B0A94E65DF5D', secret='FYtk/3tycKsW5JC2ZYdgd0F974zuOK6HUFU79WBx')
rsconnect::deployApp('/Users/michaelchuang/git_project/mjc_Shiny_Project')
rsconnect::deployApp('/Users/michaelchuang/git_project/mjc_Shiny_Project')
rsconnect::deployApp('/Users/michaelchuang/git_project/mjc_Shiny_Project')
rsconnect::deployApp('/Users/michaelchuang/git_project/mjc_Shiny_Project')
nL <- countLines('./311_Service_Requests_from_2015.csv')
nL <- countLines('./311_Service_Requests_from_2015.csv')
runApp()
nL <- countLines('./311_Service_Requests_from_2015.csv')
nL <- nrow('./311_Service_Requests_from_2015.csv')
nL
nL <-countLines('./311_Service_Requests_from_2015.csv')
nL
raw_data_full <- fread("./Service_Requests_311.csv", stringsAsFactors = F, nrows=50000)
raw_data_full <- fread("./311_Service_Requests_from_2015.csv", stringsAsFactors = F, nrows=50000)
raw_data_full <- fread("./311_Service_Requests_from_2015.csv",select = c("Unique Key","Incident Zip","Incident Address", "Created Date", "Complaint Type",'Descriptor','Borough', 'Latitude','Longitude'), nrows=50000)
raw_data_full <- fread("./311_Service_Requests_from_2015.csv",select = c("Unique Key","Incident Zip","Incident Address", "Created Date", "Complaint Type",'Descriptor','Borough', 'Latitude','Longitude'), nrows=50000)
raw_data_full <- fread("./311_Service_Requests_from_2015.csv",select = c("Unique Key","Incident Zip","Incident Address", "Created Date", "Complaint Type",'Descriptor','Borough', 'Latitude','Longitude'), nrows=5000)
raw_slice = fread('./311_Service_Requests_from_2015.csv',select = c("Unique Key","Incident Zip","Incident Address", "Created Date", "Complaint Type",'Descriptor','Borough', 'Latitude','Longitude'))
raw_data_full <- fread("./311_Service_Requests_from_2015.csv",select = c("Unique Key", "Complaint Type",'Descriptor','Borough', 'Latitude','Longitude'), nrows=5000)
raw_data_full <- fread("./311_Service_Requests_from_2015.csv",select = c("Unique Key", "Complaint Type",'Descriptor','Borough', 'Latitude','Longitude'), nrows=500000)
grep('((.*\\btree.*)|(branch))', raw_data_full$`Complaint Type`
nL <-countLines('./311_Service_Requests_from_2015.csv')
nL
raw_slice = fread('./311_Service_Requests_from_2015.csv',select = c("Unique Key","Incident Zip","Incident Address", "Created Date", "Complaint Type",'Descriptor','Borough', 'Latitude','Longitude'))
names(raw_slice) <-  tolower(names(raw_slice))
names(raw_slice) <- gsub(" ", '_', names(raw_slice))
col_groups <- c('heating', 'noise','construction','plumbing', 'paint', 'unsanitary', 'car_related','street_lights_signals','tree','electric','vermin','street_sidewalk')
###consolidate complaint types
raw_slice <- raw_slice %>%
filter(., !is.na(longitude), longitude > -77, !incident_address=="") %>%
#filter(., !incident_address=="") %>%
mutate(.,complaint_type=gsub('(.*heat.*)', replacement=col_groups[1], x=complaint_type, ignore.case=TRUE)) %>%
mutate(.,complaint_type=gsub('(.*noise.*)', replacement=col_groups[2], x=complaint_type, ignore.case=TRUE))  %>%
mutate(.,complaint_type=gsub('(.*construction.*)', replacement=col_groups[3], x=complaint_type, ignore.case=TRUE)) %>%
mutate(.,complaint_type=gsub('(.*plumbing*|.*water sys.*|.*leak.*)', replacement=col_groups[4], x=complaint_type, ignore.case=TRUE))%>%
mutate(.,complaint_type=gsub('(.*paint.*)', replacement=col_groups[5], x=complaint_type, ignore.case=TRUE)) %>%
mutate(.,complaint_type=gsub('(.*sani.*|.*dirty.*)', replacement=col_groups[6], x=complaint_type, ignore.case=TRUE)) %>%
mutate(.,complaint_type=gsub('blocked driveway|Illegal Parking|Traffic$', replacement=col_groups[7], x=complaint_type, ignore.case=TRUE)) %>%
#mutate(.,complaint_type=gsub('.*(Street Sign).*|.*(Street Light).*|.*signal.*', replacement=col_groups[8], x=complaint_type, ignore.case=TRUE)) %>%
mutate(.,complaint_type=gsub('((.*\\btree.*)|(branch))', replacement=col_groups[9], x=complaint_type, ignore.case=TRUE))%>%
#mutate(.,complaint_type=gsub('(.*electric.*)', replacement=col_groups[10], x=complaint_type, ignore.case=TRUE))%>%
mutate(.,complaint_type=gsub('(.*rodent.*)|(.*nonconst.*)', replacement=col_groups[11], x=complaint_type, ignore.case=TRUE)) %>%
mutate(.,complaint_type=gsub('(.*sidewalk.*)|(.*street\\b).*', replacement=col_groups[12], x=complaint_type, ignore.case=TRUE)) %>%
filter(., complaint_type %in% col_groups) %>%
mutate(.,weekday = weekdays(as.Date(created_date,format = "%m/%d/%Y")),
year = year(as.Date(created_date,format = "%m/%d/%Y")),
hour = hour(parse_date_time(created_date, 'mdY H!MS p' )),
month = month(as.Date(created_date,format = "%m/%d/%Y")),
weeknum = week(as.Date(created_date,format = "%m/%d/%Y")),
yday = yday(as.Date(created_date,format = "%m/%d/%Y")))
grep('((.*\\btree.*)|(branch))', raw_data_full$`Complaint Type`  )
trees=grep('((.*\\btree.*)|(branch))', raw_data_full$`Complaint Type` )
trees=grep('((.*\\btree.*)|(branch))', x=raw_data_full$`Complaint Type` )
View(raw_data_full$`Complaint Type`)
test1 <- (raw_data_full$`Complaint Type`)
print(test1)
class(test1)
class(test1[1])
trees=grep('((.*\\btree.*)|(branch))', x=test1 )
trees=grep('((.*\\btree.*)|(branch))', x=test1 , value=TRUE)
table(trees)
trees=grep('((.*\\btree.*)|(branch))', x=test1[1] , value=TRUE)
table(trees)
test1[1]
test1[2]
test1[2.1]
test1[2,1]
test1[1:499000]
trees=grep('((.*\\btree.*)|(branch))', x=test1[1:49900] , value=TRUE)
table(trees)
class(test1)
trees=grep('(.*heat.*)', x=test1[1:49900] , value=TRUE)
table(trees)
filter_test <- table(grep('((.*\\btree.*)|(branch))',x=test1,ignore.case=TRUE,value = TRUE))
filter_test
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp('/Users/michaelchuang/git_project/mjc_Shiny_Project')
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp('/Users/michaelchuang/git_project/mjc_Shiny_Project')
runApp()
runApp()
runApp()
rsconnect::deployApp('/Users/michaelchuang/git_project/mjc_Shiny_Project')
rsconnect::deployApp('/Users/michaelchuang/git_project/mjc_Shiny_Project')
runApp()
runApp()
